{
    "Additiveprime.py": [
        {
            "operation": "PASTE",
            "lines": 27,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 15:21:03",
            "keyStrokeInfo": "def prime(n):\r\n    count=0\r\n    if n>1:\r\n        for i in range(1,n+1):\r\n            if(n%i)==0:\r\n                count +=1\r\n        if count==2:\r\n            return True\r\n        else:\r\n            return False\r\n\r\ndef sum(n):\r\n    sum=0\r\n    while n>0:\r\n        digit=n%10\r\n        digit=sum+digit\r\n        n=n//10\r\n    return sum\r\n\r\ndef addictive(n):\r\n    if (not prime(n)):\r\n        return False\r\n    else:\r\n        return True\r\n  \r\n    # return prime(sum(n))\r\nprint(addictive(98)",
            "position": "1,1"
        },
        {
            "operation": "DELETE",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 15:21:11",
            "keyStrokeInfo": "",
            "position": "20,9"
        },
        {
            "operation": "TYPED",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 15:21:14",
            "keyStrokeInfo": "p",
            "position": "20,13"
        },
        {
            "operation": "TYPED",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 15:21:14",
            "keyStrokeInfo": "r",
            "position": "20,14"
        },
        {
            "operation": "TYPED",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 15:21:14",
            "keyStrokeInfo": "i",
            "position": "20,15"
        },
        {
            "operation": "TYPED",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 15:21:15",
            "keyStrokeInfo": "m",
            "position": "20,16"
        },
        {
            "operation": "TYPED",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 15:21:15",
            "keyStrokeInfo": "e",
            "position": "20,17"
        },
        {
            "operation": "DELETE",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 15:21:24",
            "keyStrokeInfo": "",
            "position": "13,9"
        },
        {
            "operation": "DELETE",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 15:21:24",
            "keyStrokeInfo": "",
            "position": "13,8"
        },
        {
            "operation": "TYPED",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 15:21:27",
            "keyStrokeInfo": "=0",
            "position": "13,8"
        },
        {
            "operation": "DELETE",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 15:21:27",
            "keyStrokeInfo": "",
            "position": "20,13"
        },
        {
            "operation": "TYPED",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 15:21:39",
            "keyStrokeInfo": "p",
            "position": "20,13"
        },
        {
            "operation": "TYPED",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 15:21:39",
            "keyStrokeInfo": "r",
            "position": "20,14"
        },
        {
            "operation": "TYPED",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 15:21:39",
            "keyStrokeInfo": "i",
            "position": "20,15"
        },
        {
            "operation": "TYPED",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 15:21:39",
            "keyStrokeInfo": "m",
            "position": "20,16"
        },
        {
            "operation": "TYPED",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 15:21:39",
            "keyStrokeInfo": "e",
            "position": "20,17"
        },
        {
            "operation": "DELETE",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 15:21:42",
            "keyStrokeInfo": "",
            "position": "27,11"
        },
        {
            "operation": "TYPED",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 15:21:45",
            "keyStrokeInfo": "p",
            "position": "27,15"
        },
        {
            "operation": "TYPED",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 15:21:46",
            "keyStrokeInfo": "r",
            "position": "27,16"
        },
        {
            "operation": "TYPED",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 15:21:46",
            "keyStrokeInfo": "i",
            "position": "27,17"
        },
        {
            "operation": "TYPED",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 15:21:46",
            "keyStrokeInfo": "m",
            "position": "27,18"
        },
        {
            "operation": "TYPED",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 15:21:46",
            "keyStrokeInfo": "e",
            "position": "27,19"
        },
        {
            "operation": "PASTE",
            "lines": 1,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 15:21:48",
            "keyStrokeInfo": "additiveprime",
            "position": "27,7"
        },
        {
            "operation": "TYPED",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 15:21:50",
            "keyStrokeInfo": ")",
            "position": "27,24"
        }
    ],
    "interleave.py": [
        {
            "operation": "PASTE",
            "lines": 14,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 16:18:20",
            "keyStrokeInfo": "def interleave(s1, s2):\r\n    l1 = len(s1)\r\n    l2 = len(s2)\r\n    res = \"\"\r\n    if l1 >= l2:\r\n        for i in range(0,l2):\r\n            res = res +s1[i]+s2[i]\r\n        res = res +s1[l2:]\r\n    else:\r\n        for i in range(0,l1):\r\n             res = res+s1[i]+s2[i]\r\n        res=res+s2[l1:]\r\n    return res    \r\nprint(interleave(input(), input()))",
            "position": "1,1"
        },
        {
            "operation": "TYPED",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 16:22:54",
            "keyStrokeInfo": "\r\n",
            "position": "14,1"
        },
        {
            "operation": "DELETE",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 16:23:20",
            "keyStrokeInfo": "",
            "position": "15,24"
        },
        {
            "operation": "DELETE",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 16:23:21",
            "keyStrokeInfo": "",
            "position": "15,23"
        },
        {
            "operation": "DELETE",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 16:23:21",
            "keyStrokeInfo": "",
            "position": "15,22"
        },
        {
            "operation": "DELETE",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 16:23:21",
            "keyStrokeInfo": "",
            "position": "15,21"
        },
        {
            "operation": "DELETE",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 16:23:21",
            "keyStrokeInfo": "",
            "position": "15,20"
        },
        {
            "operation": "DELETE",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 16:23:21",
            "keyStrokeInfo": "",
            "position": "15,19"
        },
        {
            "operation": "DELETE",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 16:23:22",
            "keyStrokeInfo": "",
            "position": "15,18"
        },
        {
            "operation": "TYPED",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 16:23:22",
            "keyStrokeInfo": "p",
            "position": "15,18"
        },
        {
            "operation": "TYPED",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 16:23:23",
            "keyStrokeInfo": "t",
            "position": "15,19"
        },
        {
            "operation": "TYPED",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 16:23:23",
            "keyStrokeInfo": "o",
            "position": "15,20"
        },
        {
            "operation": "DELETE",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 16:23:25",
            "keyStrokeInfo": "",
            "position": "15,27"
        },
        {
            "operation": "DELETE",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 16:23:26",
            "keyStrokeInfo": "",
            "position": "15,26"
        },
        {
            "operation": "DELETE",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 16:23:26",
            "keyStrokeInfo": "",
            "position": "15,25"
        },
        {
            "operation": "DELETE",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 16:23:26",
            "keyStrokeInfo": "",
            "position": "15,24"
        },
        {
            "operation": "DELETE",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 16:23:26",
            "keyStrokeInfo": "",
            "position": "15,23"
        },
        {
            "operation": "TYPED",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 16:23:27",
            "keyStrokeInfo": "y",
            "position": "15,23"
        },
        {
            "operation": "TYPED",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 16:23:27",
            "keyStrokeInfo": "h",
            "position": "15,24"
        },
        {
            "operation": "TYPED",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 16:23:28",
            "keyStrokeInfo": "n",
            "position": "15,25"
        },
        {
            "operation": "DELETE",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 16:23:29",
            "keyStrokeInfo": "",
            "position": "15,27"
        },
        {
            "operation": "DELETE",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 16:23:30",
            "keyStrokeInfo": "",
            "position": "15,26"
        },
        {
            "operation": "TYPED",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 16:23:51",
            "keyStrokeInfo": "()",
            "position": "15,26"
        },
        {
            "operation": "DELETE",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 16:23:52",
            "keyStrokeInfo": "",
            "position": "15,23"
        },
        {
            "operation": "TYPED",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 16:23:52",
            "keyStrokeInfo": "input",
            "position": "15,23"
        },
        {
            "operation": "DELETE",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 16:23:52",
            "keyStrokeInfo": "",
            "position": "15,18"
        },
        {
            "operation": "TYPED",
            "lines": 0,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 16:23:53",
            "keyStrokeInfo": "input()",
            "position": "15,18"
        }
    ],
    "vowelcount.py": [
        {
            "operation": "PASTE",
            "lines": 8,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 16:27:39",
            "keyStrokeInfo": "def vowelCount(s):\r\n    Count=0\r\n    vowel=set(\"aeiouAEIOU\")\r\n    for alphabets in s:\r\n        if alphabets in vowel:\r\n            Count=Count+1\r\n    return Count\r\nprint(vowelCount(input()))",
            "position": "1,1"
        },
        {
            "operation": "PASTE",
            "lines": 9,
            "keyStrokeTimeStamp": "Mon Jul 26 2021 16:31:27",
            "keyStrokeInfo": "def Check_Vow(string, vowels):\r\n    final = [each for each in string if each in vowels]\r\n    print(len(final))\r\n    print(final)\r\n     \r\n# Driver Code\r\nstring = \"Geeks for Geeks\"\r\nvowels = \"AaEeIiOoUu\"\r\nCheck_Vow(string, vowels);",
            "position": "1,1"
        }
    ]
}